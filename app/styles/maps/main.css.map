{"version":3,"file":"../main.css","sources":["main.scss","helpers/_vars.scss","helpers/_mixins.scss","helpers/_functions.scss","vendor/_libs.scss","vendor/libs/_normalize.scss","_config.scss","../blocks/components/_components.scss","../blocks/modules/_modules.scss"],"sourcesContent":["@import \"helpers/vars\";\r\n@import \"helpers/mixins\";\r\n@import \"helpers/functions\";\r\n@import \"vendor/libs\";\r\n\r\n@import \"config\";\r\n\r\n@import \"../blocks/components/components\";\r\n@import \"../blocks/modules/modules\";\r\n\r\n\r\n// $white: #fff;\r\n// $black: #000;\r\n// $radius: 5px;\r\n// $sans: \"Helvetica\", sans-serif;\r\n// $default: #88a23d;\r\n\r\n// @mixin element-base {\r\n// \t@include background-clip;\r\n// \t@include transition(none);\r\n// \t@include appearance(none);\r\n// \tposition: relative;\r\n// \tfont-family: $sans;\r\n// \tfont-weight: 600; }\r\n\t\r\n// %element-base {\r\n// \t@include element-base; }\r\n    \r\n// @mixin element(\r\n// \t$main-color: #888,\r\n// \t$text-color: $white,\r\n// \t$radius: $radius, \r\n// \t$subtle: false, \r\n// \t$shadow: true, \r\n// \t$style: true, \r\n// \t$size: small, \r\n// \t$hover: false,\r\n// \t$font-size: false,\r\n// \t$display: inline-block) {\r\n\t\r\n// \t@if saturation($main-color) < 1% {\r\n// \t\t@if lightness($main-color) > 80% {\r\n// \t\t\t$text-color: #666; } }\r\n// \t@else {\r\n// \t\t$text-color: $text-color;\r\n// \t\t$text-color: rgba($text-color, .9); }\r\n\t\r\n// \t// normal state\r\n// \t$light-color: scale-color($main-color, $lightness: if-bright($main-color, 25%, 20%));\r\n// \t$dark-color: scale-color($main-color, $lightness: if-bright($main-color, -20%, -25%));\r\n// \t$shadow-color: scale-color($dark-color, $lightness: if-bright($main-color, -20%, -25%));\r\n\t\r\n// \t// hover state\r\n// \t$hover-main-color: scale-color($main-color, $lightness: 15%);\r\n// \t$hover-light-color: scale-color($light-color, $lightness: if-bright($main-color, 15%, 20%));\r\n// \t$hover-dark-color: scale-color($dark-color, $lightness: 15%);\r\n// \t$hover-shadow-color: $dark-color;\r\n\t\r\n// \t// active state\r\n// \t$active-main-color: $main-color;\r\n// \t$active-light-color: $light-color;\r\n// \t$active-dark-color: scale-color($dark-color, $lightness: -25%);\r\n// \t$active-shadow-color: scale-color($active-dark-color, $lightness: -25%);\r\n\t\r\n// \t// @extend %element-base;\r\n\t\r\n// \t@if $display == block { \r\n// \t\tdisplay: block; }\r\n// \t@else { \r\n// \t\tdisplay: inline-block; }\r\n\t\r\n// \t@if $subtle == true { \r\n// \t\tcolor: $subtle-color; }\r\n// \t@else if $style == true { \r\n// \t\tcolor: $text-color; }\r\n\t\r\n// \t@if $size == xlarge {\r\n// \t\tpadding: em($line, $base-font-size) em($line*3, $base-font-size);\r\n// \t\t@if $font-size == true {\r\n// \t\t\tfont-size: 150%; } }\r\n\t\t\t\r\n// \t@else if $size == large {\r\n// \t\tpadding: em($base-px*1.5, $base-font-size) em($line*2, $base-font-size);\r\n// \t\t@if $font-size == true {\r\n// \t\t\tfont-size: 125%; } }\r\n\t\t\r\n// \t@else if $size == normal {\r\n// \t\tpadding: em($base-px, $base-font-size) em($line*1.5, $base-font-size); }\r\n\t\t\r\n// \t@else if $size == small {\r\n// \t\tpadding: em($base-px/1.3333333333, $base-font-size) em($line, $base-font-size);\r\n// \t\t@if $font-size == true {\r\n// \t\t\tfont-size: 90%; } }\r\n\t\t\t\r\n// \t@else if $size == xsmall {\r\n// \t\tpadding: em($base-px/2, $base-font-size) em($line/1.5, $base-font-size);\r\n// \t\t@if $font-size == true {\r\n// \t\t\tfont-size: 80%; } }\r\n\t\t\t\r\n// \t@else if $size == xxsmall {\r\n// \t\tpadding: em($base-px/4, $base-font-size) em($line/2, $base-font-size);\r\n// \t\t@if $font-size == true {\r\n// \t\t\tfont-size: 80%; } }\r\n\t\r\n// \t@if $radius != none OR $radius == false {\r\n// \t\t@include border-radius($radius); }\r\n\t\r\n// \t// you may just want a button without style \r\n// \t// as sometimes you may just want a nice start\r\n// \t// padding, etc\r\n// \t@if $style == true {\r\n// \t\t// subtle start\r\n// \t\t@if $subtle == true {\r\n// \t\t\t@include box-shadow(inset 0 0 0 1px fade-out($subtle-color, 1));\r\n// \t\t\t.no-boxshadow & {\r\n// \t\t\t\tborder: 1px solid transparent; }\r\n// \t\t\t.no-cssgradients & {\r\n// \t\t\t\tbackground: $active-main-color; } } // close $subtle true\r\n// \t\t// non subtle start\t\t\r\n// \t\t@else {\r\n// \t\t\t@include background(\r\n// \t\t\t\tlinear-gradient(\r\n// \t\t\t\t\trgba($main-color, .8) 10%,\r\n// \t\t\t\t\trgba($dark-color, .8) 70%), $main-color);\r\n\t\r\n// \t\t\t@if $shadow == true {\t\t\r\n// \t\t\t\t@include box-shadow(\r\n// \t\t\t\t\tinset 0 0 0 1px $shadow-color,\r\n// \t\t\t\t\tinset 0 2px 0 $light-color,\r\n// \t\t\t\t\tinset 0 -1px 3px $dark-color,\r\n// \t\t\t\t\tinset -1px -3px 12px -3px rgba($shadow-color, .2),\r\n// \t\t\t\t\tinset 1px -3px 12px -3px rgba($shadow-color, .2),\r\n// \t\t\t\t\t0 1px 2px rgba($black, .2));\r\n// \t\t\t\t@if saturation($main-color) < 1% {\r\n// \t\t\t\t\t@if lightness($main-color) > 80% {\r\n// \t\t\t\t\t\ttext-shadow: 0 1px 1px rgba($light-color, .6); }\r\n// \t\t\t\t\t@else {\r\n// \t\t\t\t\t\ttext-shadow: 0 1px 1px rgba($active-dark-color, .6); } }\r\n// \t\t\t\t@else {\r\n// \t\t\t\t\ttext-shadow: 0 1px 1px rgba($active-shadow-color, .6); } }\r\n\t\t\t\r\n// \t\t\t// modernizr stuff\r\n// \t\t\t.no-boxshadow & {\r\n// \t\t\t\tborder: 1px solid $shadow-color; }\r\n// \t\t\t.no-cssgradients & {\r\n// \t\t\t\tbackground: $main-color; }\r\n// \t\t} // close else\r\n// \t\t@if $hover == true {\r\n// \t\t\t&:hover, &:focus {\r\n// \t\t\t\tcolor: $text-color;\r\n\t\t\t\t\r\n// \t\t\t\t@include background(\r\n// \t\t\t\t\tlinear-gradient(\r\n// \t\t\t\t\t\trgba($hover-main-color, .8) 0%,\r\n// \t\t\t\t\t\trgba($hover-dark-color, .8) 60%), $hover-main-color);\r\n\t\t\t\t\r\n// \t\t\t\t@if $shadow == true {\t\t\r\n// \t\t\t\t\t@include box-shadow(\r\n// \t\t\t\t\t\tinset 0 0 0 1px $hover-shadow-color,\r\n// \t\t\t\t\t\tinset 0 2px 0 $hover-light-color,\r\n// \t\t\t\t\t\tinset 0 -1px 3px $hover-dark-color,\r\n// \t\t\t\t\t\tinset -1px -3px 12px -3px rgba($hover-shadow-color, .2),\r\n// \t\t\t\t\tinset 1px -3px 12px -3px rgba($hover-shadow-color, .2),\r\n// \t\t\t\t\t\t0 1px 2px rgba($black, .25));\r\n// \t\t\t\t\t@if saturation($main-color) < 1% {\r\n// \t\t\t\t\t\t@if lightness($main-color) > 80% {\r\n// \t\t\t\t\t\t\ttext-shadow: 0 1px 1px rgba($hover-light-color, .6); }\r\n// \t\t\t\t\t\t@else {\r\n// \t\t\t\t\t\t\ttext-shadow: 0 1px 1px rgba($hover-shadow-color, .6); } }\r\n// \t\t\t\t\t@else {\r\n// \t\t\t\t\t\ttext-shadow: 0 1px 1px rgba($hover-shadow-color, .6); } }\r\n\t\t\t\t\r\n// \t\t\t\t// modernizr stuff\r\n// \t\t\t\t.no-boxshadow & {\r\n// \t\t\t\t\tborder: 1px solid $hover-shadow-color; }\r\n// \t\t\t\t.no-cssgradients & {\r\n// \t\t\t\t\tbackground: $hover-main-color; } }\r\n\t\t\t\t\t\r\n// \t\t\t&:active {\r\n// \t\t\t\tcolor: $text-color;\r\n\r\n// \t\t\t\t@include background(\r\n// \t\t\t\t\tlinear-gradient(\r\n// \t\t\t\t\t\trgba($active-dark-color, .4),\r\n// \t\t\t\t\t\trgba($main-color, .8)), $main-color);\r\n\r\n// \t\t\t\t@if $shadow == true {\t\t\r\n// \t\t\t\t\t@include box-shadow(\r\n// \t\t\t\t\t\tinset 0 1px 3px $active-shadow-color,\r\n// \t\t\t\t\t\tinset 0 1px 0 1px $active-dark-color,\r\n// \t\t\t\t\t\tinset 0 2px 3px $active-dark-color,\r\n// \t\t\t\t\t\tinset -1px -3px 12px -3px rgba($active-shadow-color, .2),\r\n// \t\t\t\t\t\tinset 1px -3px 12px -3px rgba($active-shadow-color, .2),\r\n// \t\t\t\t\t\t0 1px 1px rgba($white, .5));\r\n\r\n// \t\t\t\t@if saturation($main-color) < 1% {\r\n// \t\t\t\t\t@if lightness($main-color) > 80% {\r\n// \t\t\t\t\t\ttext-shadow: 0 1px 1px rgba($active-light-color, .6); }\r\n// \t\t\t\t\t@else {\r\n// \t\t\t\t\t\ttext-shadow: 0 1px 1px scale-color(rgba($active-shadow-color, .6), $lightness: -10%); } }\r\n// \t\t\t\t@else {\r\n// \t\t\t\t\ttext-shadow: 0 1px 1px scale-color(rgba($active-shadow-color, .6), $lightness: -10%); } }\r\n\t\t\t\t\t\r\n// \t\t\t\t.no-boxshadow & {\r\n// \t\t\t\t\tborder: 1px solid $active-shadow-color; }\r\n// \t\t\t\t.no-cssgradients & {\r\n// \t\t\t\t\tbackground: $active-main-color; } } }\r\n// \t} // close $style\r\n// }","@import \"mixins\";\r\n\r\n// USER VARIABLES SECTION\r\n$textcolor: #fff; // Text Color\r\n$accent: #FB8203; // Accent Color\r\n$dark: #171717;\r\n\r\n$fontsize: 16px; // Body Font Size\r\n$system: -apple-system, BlinkMacSystemFont, Arial, sans-serif; // System Font Family\r\n$roboto: Roboto, sans-serif;\r\n\r\n// Grid Setup\r\n$max-w: 1170px;\r\n$gutter: 15px;\r\n\r\n$flexbox-grid-mixins-grid-type: margin-offset; // skeleton // margin-offset\r\n$flexbox-grid-mixins-stack: null; // margin-bottom // margin-top // margin-both // null\r\n","@charset 'utf-8';\r\n\r\n@mixin font($fname, $fstyle, $fweight, $furl) {\r\n    @font-face {\r\n        font-family: quote($fname);\r\n        font-style: $fstyle;\r\n        font-weight: $fweight;\r\n        font-display: swap;\r\n        src: local($fname), url(#{$furl}.woff2) format(\"woff2\");\r\n    }\r\n}\r\n\r\n@mixin box($width, $height: $width) {\r\n    width: $width;\r\n    height: $height;\r\n}\r\n\r\n@mixin cover-bg {\r\n    background-repeat: no-repeat;\r\n    background-size: cover;\r\n    background-position: center;\r\n}\r\n\r\n// MIXIN BUTTON\r\n\r\n\r\n// MIXIN FLEX BOX GRID\r\n$flexbox-grid-mixins-grid-type: skeleton !default;\r\n$flexbox-grid-mixins-stack: margin-bottom !default;\r\n\r\n@mixin grid(\r\n    $display: flex,\r\n    $fd: null,\r\n    $fw: wrap,\r\n    $ff: null,\r\n    $jc: null,\r\n    $ai: null,\r\n    $ac: null,\r\n    $gutter: null) {\r\n\r\n\t@if $display {\r\n\t\tdisplay: $display;\r\n\t}\r\n\t@if $fd {\r\n\t\tflex-direction: $fd;\r\n\t}\r\n\t@if $fw {\r\n\t\tflex-wrap: $fw;\r\n\t}\r\n\t@if $ff {\r\n\t\tflex-flow: $ff;\r\n\t}\r\n\t@if $jc {\r\n\t\tjustify-content: $jc;\r\n\t}\r\n\t@if $ai {\r\n\t\talign-items: $ai;\r\n\t}\r\n\t@if $ac {\r\n\t\talign-content: $ac;\r\n\t}\r\n\r\n\t@if $flexbox-grid-mixins-grid-type == skeleton {\r\n\t\t@if $gutter {\r\n\t\t\tmargin-left: $gutter / 2 * -1;\r\n\t\t\tmargin-right: $gutter / 2 * -1;\r\n\t\t}\r\n\t}\r\n\r\n\t@content;\r\n}\r\n\r\n@mixin grid-col($col: null,\r\n    $grid-columns: 12,\r\n    $col-offset: null,\r\n    $gutter: null,\r\n    $as: null,\r\n    $fg: 0,\r\n    $fsh: 1,\r\n    $fb: auto,\r\n    $order: null,\r\n    $shorthand: true,\r\n    $last-child: false,\r\n    $width: null,\r\n    $max-width: null,\r\n    $min-width: null,\r\n    $height: null,\r\n    $max-height: null,\r\n    $min-height: null) {\r\n\r\n\r\n\t@if type-of($col) == number and unitless($col) == true {\r\n\t\t$fsh: 0;\r\n\t\t$fb: percentage($col / $grid-columns);\r\n\r\n\t\t@if $flexbox-grid-mixins-grid-type == skeleton {\r\n\t\t\t@if $gutter and unit($gutter) == '%' {\r\n\t\t\t\t$fb: $fb - $gutter;\r\n\t\t\t} @else if $gutter and unitless($gutter) == false {\r\n\t\t\t\t$fb: calc( #{$fb} - #{$gutter});\r\n\t\t\t}\r\n\r\n\t\t} @else if $flexbox-grid-mixins-grid-type == margin-offset {\r\n\t\t\t@if $gutter and unit($gutter) == '%' {\r\n\t\t\t\t$fb: (100% - ($gutter * ($grid-columns / $col - 1))) / ($grid-columns / $col);\r\n\t\t\t} @else if $gutter and unitless($gutter) == false {\r\n\t\t\t\t$fb: calc( #{$fb} - #{$gutter * ($grid-columns / $col - 1) / ($grid-columns / $col)});\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t@if $col-offset and unit($col-offset) == '%' {\r\n\t\t\t$fb: $fb + $col-offset;\r\n\t\t} @else if $col-offset and unitless($col-offset) == false {\r\n\t\t\t$fb: calc( #{$fb} + #{$col-offset});\r\n\t\t}\r\n\t} @else if type-of($col) == number and unitless($col) == false {\r\n\t\t$fg: 0;\r\n\t\t$fsh: 0;\r\n\t\t$fb: $col;\r\n\t} @else if type-of($col) == string and $col == 'auto' {\r\n\t\t// flex: auto;\r\n\t\t$fg: 1;\r\n\t\t$fsh: 1;\r\n\t\t$fb: auto;\r\n\t} @else if type-of($col) == string and $col == 'equal' {\r\n\t\t// flex: 1;\r\n\t\t$fg: 1;\r\n\t\t$fsh: 1;\r\n\t\t$fb: 0;\r\n\t} @else if type-of($col) == string and $col == 'none' {\r\n\t\t// flex: none;\r\n\t\t$fg: 0;\r\n\t\t$fsh: 0;\r\n\t\t$fb: auto;\r\n\t} @else if type-of($col) == string and $col == 'initial' {\r\n\t\t// flex: initial;\r\n\t\t$fg: 0;\r\n\t\t$fsh: 1;\r\n\t\t$fb: auto;\r\n\t} @else if type-of($col) == string and $col == 'positive' {\r\n\t\t// positive number\r\n\t\t@if $fg == 0 {\r\n\t\t\t$fg: 1;\r\n\t\t}\r\n\t\t$fsh: 0;\r\n\t\t$fb: 0;\r\n\t}\r\n\r\n\t@if type-of($shorthand) == bool and $shorthand == true {\r\n\t\tflex: $fg $fsh $fb;\r\n\t} @else {\r\n\t\tflex-basis: $fb;\r\n\t\tflex-grow: $fg;\r\n\t\tflex-shrink: $fsh;\r\n\t}\r\n\r\n\t@if $as != null {\r\n\t\talign-self: $as;\r\n\t}\r\n\r\n\t@if type-of($order) == number {\r\n\t\torder: $order;\r\n\t}\r\n\r\n\t@if type-of($width) == bool and $width == true {\r\n\t\twidth: $fb;\r\n\t} @else if type-of($width) == number and unitless($width) == false {\r\n\t\twidth: $width;\r\n\t} @else if type-of($width) == string and $width == 'auto' {\r\n\t\twidth: auto;\r\n\t}\r\n\r\n\t@if type-of($max-width) == bool and $max-width == true {\r\n\t\tmax-width: $fb;\r\n\t} @else if type-of($max-width) == number and unitless($max-width) == false {\r\n\t\tmax-width: $max-width;\r\n\t} @else if type-of($max-width) == string and $max-width == 'auto' {\r\n\t\tmax-width: auto;\r\n\t}\r\n\r\n\t@if type-of($min-width) == bool and $min-width == true {\r\n\t\tmin-width: $fb;\r\n\t} @else if type-of($min-width) == number and unitless($min-width) == false {\r\n\t\tmin-width: $min-width;\r\n\t} @else if type-of($min-width) == string and $min-width == 'auto' {\r\n\t\tmin-width: auto;\r\n\t}\r\n\r\n\t@if $height != null {\r\n\t\theight: $height;\r\n\t}\r\n\t@if $max-height != null {\r\n\t\tmax-height: $max-height;\r\n\t}\r\n\t@if $min-height != null {\r\n\t\tmin-height: $min-height;\r\n\t}\r\n\r\n\t@if $gutter and unitless($gutter) == false {\r\n\t\t@if $flexbox-grid-mixins-grid-type == skeleton {\r\n\t\t\tmargin-left: $gutter / 2;\r\n\t\t\tmargin-right: $gutter / 2;\r\n\t\t} @else if $flexbox-grid-mixins-grid-type == margin-offset {\r\n\t\t\t@if type-of($last-child) == bool and $last-child == true {\r\n\t\t\t\tmargin-right: 0;\r\n\t\t\t} @else {\r\n\t\t\t\tmargin-right: $gutter;\r\n\t\t\t}\r\n        }\r\n        \r\n        @if $flexbox-grid-mixins-stack != null {\r\n            @if $flexbox-grid-mixins-stack == margin-top {\r\n                margin-top: $gutter;\r\n            } @else if $flexbox-grid-mixins-stack == margin-bottom {\r\n                margin-bottom: $gutter;\r\n            } @else if $flexbox-grid-mixins-stack == margin-both {\r\n                margin-top: $gutter / 2;\r\n                margin-bottom: $gutter / 2;\r\n            }\r\n        }\r\n\t}\r\n\t@content;\r\n}","","@import \"./libs/normalize\";","","// font-weight helper:\r\n// 100 Extra Light or Ultra Light;\r\n// 200 Light or Thin; 300 Book or Demi;\r\n// 400 Regular or Normal;\r\n// 500 Medium;\r\n// 600 Semibold or Demibold;\r\n// 700 Bold;\r\n// 800 Black or Extra Bold or Heavy;\r\n// 900 Extra Black or Fat or Ultra Black\r\n@include font('Roboto', normal, 400, '../fonts/roboto/roboto-regular-webfont');\r\n@include font('Roboto', italic, 400, '../fonts/roboto/roboto-italic-webfont');\r\n@include font('Roboto', normal, 700, '../fonts/roboto/roboto-bold-webfont');\r\n@include font('Roboto', italic, 700, '../fonts/roboto/roboto-bolditalic-webfont');\r\n\r\n// GENERAL DOCUMENT STYLES\r\n\r\n::placeholder {\r\n    color: #666;\r\n}\r\n\r\n::selection {\r\n    background-color: $accent;\r\n    color: #fff;\r\n}\r\n\r\ninput,\r\ntextarea {\r\n    outline: none;\r\n\r\n    &:focus:required:invalid {\r\n        border-color: red\r\n    }\r\n\r\n    &:required:valid {\r\n        border-color: green\r\n    }\r\n}\r\n\r\nhtml {\r\n    font-family: $roboto;\r\n    font-size: $fontsize;\r\n    height: 100%;\r\n}\r\n\r\nbody {\r\n    height: 100%;\r\n    scroll-behavior: smooth;\r\n    text-rendering: optimizeSpeed;\r\n    line-height: 1.5;\r\n    min-width: 320px;\r\n    position: relative;\r\n    overflow-x: hidden;\r\n    color: $textcolor;\r\n}\r\n\r\n*,\r\n*::before,\r\n*::after { box-sizing: border-box; }\r\n\r\n#{headings()}, p, ol, ul {\r\n    margin: 0;\r\n    padding: 0;\r\n}\r\n\r\nol, ul {\r\n    list-style: none;\r\n}\r\n\r\nimg {\r\n    max-width: 100%;\r\n    display: block;\r\n}\r\n\r\ninput,\r\nbutton,\r\ntextarea,\r\nselect { font: inherit; }\r\n\r\naudio,\r\ncanvas,\r\niframe,\r\nimg,\r\nsvg,\r\nvideo,\r\ntextarea {vertical-align: middle; }\r\n\r\ntextarea { resize: none; }\r\n\r\ninput, button {\r\n    outline: none;\r\n}\r\n\r\n\r\n.wrapper {\r\n    width: calc(100% - #{$gutter * 2});\r\n    max-width: $max-w;\r\n    margin: 0 auto;\r\n    position: relative;\r\n    background-color: red;\r\n    height: 100px;\r\n}\r\n\r\n.items {\r\n    @include grid($gutter: $gutter, $fw: nowrap);\r\n    // display: flex;\r\n    // flex-flow: row wrap;\r\n    // flex-flow: row nowrap;\r\n    // align-items: baseline;\r\n}\r\n.item-1 {\r\n    @include grid-col($col: 4, $grid-columns: 12, $gutter: $gutter);\r\n    // flex-basis: calc((100% / 3) - 20px);\r\n    // flex-basis: 100%;\r\n    // width: calc(100% / 4);\r\n    height: 100%;\r\n    background: #000;\r\n    // margin: 0 10px;\r\n}\r\n\r\n.item-2 {\r\n    @include grid-col($col: 3, $grid-columns: 12, $gutter: $gutter);\r\n    // flex-basis: calc((100% / 3) - 20px);\r\n    // flex-basis: 100%;\r\n    // width: calc(100% / 4);\r\n    height: 100%;\r\n    background: #000;\r\n    // margin: 0 10px;\r\n}\r\n\r\n.item-3 {\r\n    @include grid-col($col: 2, $grid-columns: 12, $gutter: $gutter);\r\n    // flex-basis: calc((100% / 3) - 20px);\r\n    // flex-basis: 100%;\r\n    // width: calc(100% / 4);\r\n    height: 100%;\r\n    background: #000;\r\n    // margin: 0 10px;\r\n}\r\n\r\n.item-4 {\r\n    @include grid-col($col: 3, $grid-columns: 12, $gutter: $gutter);\r\n    // flex-basis: calc((100% / 3) - 20px);\r\n    // flex-basis: 100%;\r\n    // width: calc(100% / 4);\r\n    height: 100%;\r\n    background: #000;\r\n    // margin: 0 10px;\r\n}\r\n.text {\r\n    // text-align: center;\r\n    float: right;\r\n}\r\n.btn {\r\n    background: #000;\r\n}\r\n\r\n\r\n\r\n","",""],"names":[],"mappings":"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"}